/////
//
/////


$breakpoints: add-breakpoint('sg nav top', max-width 819px);
$breakpoints: add-breakpoint('sg nav side', 820px);
$breakpoints: add-breakpoint('sg swatches small', max-width 559px);
$breakpoints: add-breakpoint('sg swatches medium', 560px 759px);
$breakpoints: add-breakpoint('sg swatches large', 760px);
$breakpoints: add-breakpoint('sg typeplate small', max-width 579px);
$breakpoints: add-breakpoint('sg typeplate large', 580px);

////////////////////////
// Extendables Partials for Style Guide use
//
// All of your extendable classes, ids, and placeholder extendables
//   should go in this file.
////////////////////////

@mixin sg-component-frame-mixin {
  // In a couple places, this can't be extended and has to be included (media queries)
  border: 1px solid grey;
  border-radius: 3px;
  margin: 1em auto;
}

%sg-component-frame {
  @include sg-component-frame-mixin;
}

%clearfix, .clearfix {
  @include clearfix();
}


//////////////////////////////////////////////////////////////////
// Colors
//////////////////////////////////////////////////////////////////

.styleguide-swatches {
  $swatches: $color-swatch;
  $swatch-count: length($color-swatch);

  @extend %clearfix;

  @include respond-to('sg swatches large') {
    @include sg-component-frame-mixin;
  }


  ol {
    margin: 0;
    padding: 0;
    list-style: none;

    overflow: hidden; // So that the box-shadow around .main only extends vertically

    @include respond-to('sg swatches small') {
      @include sg-component-frame-mixin;
      margin: 0 0 1em 0;
    }

    @include respond-to('sg swatches medium') {
      @include sg-component-frame-mixin;
      margin: 0 0 1em 0;
    }

    @include respond-to('sg swatches large') {
      @include grid-span(1,0,$swatch-count, $gutter: 0, $output-style: 'float');
      &:last-child { margin-right: 0; }
    }

  @each $swatch in $swatches {
    $name: nth($swatch, 1); // The text label
    $color_map: nth($swatch, 2); // The color array
    &.#{$name} {
      .title {
        //background-color: style-color($grey, highlight, 20%);
        background-color: $white;
        color: style-color($color_map);
      }
      .main {
        background-color: style-color($color_map);
        span:after { content: style-color($color_map) + ''; } // '' causes Sass to quote the string instead of output hex value
        .high { background-color: style-color($color_map, main, 5%); }
        .low { background-color: style-color($color_map, main, -5%); }
      }
      .dark {
        background-color: style-color($color_map, dark);
        span:after { content: style-color($color_map, dark) + ''; } // '' causes Sass to quote the string instead of output hex value
        .high { background-color: style-color($color_map, dark, 5%); }
        .low { background-color: style-color($color_map, dark, -5%); }
      }
      .dull {
        background-color: style-color($color_map, dull);
        span:after { content: style-color($color_map, dull) + ''; } // '' causes Sass to quote the string instead of output hex value
        .high { background-color: style-color($color_map, dull, 5%); }
        .low { background-color: style-color($color_map, dull, -5%); }
      }
      .light {
        background-color: style-color($color_map, bright);
        span:after { content: style-color($color_map, bright) + ''; } // '' causes Sass to quote the string instead of output hex value
        .high { background-color: style-color($color_map, bright, 5%); }
        .low { background-color: style-color($color_map, bright, -5%); }
      }
      .highlight {
        background-color: style-color($color_map, highlight);
        span:after { content: style-color($color_map, highlight) + ''; } // '' causes Sass to quote the string instead of output hex value
        .high { background-color: style-color($color_map, highlight, 5%); }
        .low { background-color: style-color($color_map, highlight, -5%); }
      }
    }
  }

    li.highlight span:after {
      color: style-color($grey, 'dark');
      text-shadow: 1px 1px 0 rgba(255,255,255,0.5);
    }

    &:last-child {
      @include respond-to('sg swatches large') {
        li { border-right: 0 !important; }
      }
    }
  }

  li {
    position: relative;
    padding: 1em;
    text-align: center;
    color: $white;

    @include respond-to('sg swatches small') {
      &.dark, &.dull,, &.light, &.highlight {
        @include grid-span(1,0,2, $gutter: 0, $output-style: 'float');
      }

      &.title {
        z-index: 50; // To pop it over the box-shadow on .main
        padding: 1em;
      }

      &.dark, &.highlight {
        margin-right: 0;
      }

      &.light, &.highlight, &.dull, &.dark {
        .accent { bottom: 0; }
        padding: 1em 0 1.75em 0; // to make room for the accents
      }
    }

    @include respond-to('sg swatches medium') {
      &.dark, &.light, &.highlight, &.dull {
        padding: 1em 0 1.75em 0; // to make room for the accents
        @include grid-span(1,0,4, $gutter: 0, $output-style: 'float');
      }

      &.title {
        z-index: 50; // To pop it over the box-shadow on .main
        padding: 1em;
      }

      &.highlight {
        margin-right: 0;
      }
    }

    @include respond-to('sg swatches large') {
      padding: 1em 25% 1em 0; // to make room for the accents
      border-right: 1px solid style-color($grey, 'highlight', 5%);
      &.title {
        padding: 1em 0;
        border-right: 1px solid style-color($grey, 'highlight', -5%);
      }
    }


    &.main {
      z-index: 25;
      box-shadow: 0px 0px 15px rgba(0,0,0,0.85);
    }

    span {
      position: relative;
      z-index: 50;

      &:after {
        text-shadow: 1px 1px 0 rgba(0,0,0,0.5);
      }
    }
  }

  .accent {
    position: absolute;

    @include respond-to('sg swatches small') {
      height: 0.75em;
      // -- bottom: 0; -- See above, there are position-specific locations for these

      &.low {
        left: 0;
        right: 50%;
      }

      &.high {
        left: 50%;
        right: 0;
      }
    }
    @include respond-to('sg swatches medium') {
      height: 0.75em;
      bottom: 0;

      &.low {
        left: 0;
        right: 50%;
      }

      &.high {
        left: 50%;
        right: 0;
      }
    }

    @include respond-to('sg swatches large') {
      right: 0;

      width: 25%;

      &.low {
        top: 0;
        bottom: 50%;
      }

      &.high {
        top: 50%;
        bottom: 0;
      }
    }

  }


  .title {
    font-style: italic;
  }

}
